// 배열의 제어

// 데이터의 추가
// 배열안에 어떠한 정보를 밀어넣은 push
let a = ['a', 'b', 'c', 'd', 'e'];
a.push('f');
alert(a);  // ['a', 'b', 'c', 'd', 'e', 'f']

// 복수의 원소를 배열에 추가하는 방법
let b = ['a', 'b', 'c', 'd', 'e'];
b = b.concat['f', 'g'];
alert(b);  // ['a', 'b', 'c', 'd', 'e', 'f', 'g']

// 배열의 시작점에 원소를 추가하기
let c = ['a', 'b', 'c', 'd', 'e'];
c.unshift('z');
alert(c);   // ['z', 'a', 'b', 'c', 'd', 'e']

// 배열의 중간에 원소를 추가하기
let d = ['a', 'b', 'c'];
d.splice(1,0, 'd')   // 인덱스 1인 'b'부터 n개의 원소를 제거한다. 이 값이 0이면 어떠한 원소도 삭제되지 않는다. 즉, b의 값 앞에 'd'를 추가한다.
d   // ['a', 'd', 'b', 'c']

let e = ['a', 'b', 'c'];
e.splice(1,1, 'x', 'y');    // 인덱스 1번부터 한 개의 원소('b')를 삭제하고, 그 자리에 뒤의 원소를 집어넣는다.
e   // ['a', 'x', 'y', 'c']