// 콜백
// 처리의 위임
// 값으로 사용될 수 있는 특성을 이요하면 함수의 인자로 함수로 전달할 수 있다.
// 값으로 저달된 함수는 호출될 수 있기 때문에 이를 이용하면 함수의 동작을 완전히 바꿀 수 있다.
// 인자로 전달된 함수 sortNumber의 구현에 따라서 sort의 동작방법이 완전히 바뀌게 된다.

let numbers = [20, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1]
let sortfunc = function(a, b){
    console.log(a, b)
    return a - b;
    // return b - a;
    // if(a > b){
    //     return 1;
    // } else if (a < b){
    //     return -1;
    // } else {
    //     return 0;
    // }
}
console.log(numbers.sort(sortfunc));

// sortfunc라는 함수가 콜백함수가 된다.

// 콜백함수를 수신받는 sort라는 메소드가 이 콜백함수의 내용을 인자로 전달받아 내부적으로 호출하는 것을 통해 sort라는 함수가 동작하는 동작방법을 우리가 변경할 수 있게 된다.
// 즉 값으로서 함수를 사용할 수 있기 때문에, 오리지널 함수의 동작방법을 값을 전달하는 것을 통해 완전하게 바꿀 수 있다.
// 이것이 콜백이고 콜백이 가능한 것은 자바스크립트의 함수가 값이기 때문에 가능하다.